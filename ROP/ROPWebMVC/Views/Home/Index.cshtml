@model RopDataSaved[]
@using Raven.Abstractions.Extensions
@using ROPInfrastructure
@{
    ViewBag.Title = "Home Page";
    var data =Model;
    var jud= AppState["judete"] as string[];
    var judStr = Enumerable.Select(jud, it => "'" + it + "'").ToArray();
    var str = string.Join(",", judStr);
    str = "[" + str + "]";

}

<div class="jumbotron">
    <h1>Romanian open data : Seturi @Model.Length</h1>
    <p class="lead">Va lasa sa alegeti si sa afisati corelatiile intre datele publicate de pe data.gov.ro</p>
    <p><a href="http://asp.net" class="btn btn-primary btn-lg">Learn more &raquo;</a></p>
</div>

<div class="row">
    <div class="col-md-2">
        <h2>Alegeti</h2>


        @foreach (var item in data)
        {

            <p>

                <input type="checkbox" id="@item.ID" name="series"/>
                <label for="@item.ID">@item.Document.Name</label>
                <input type="text" disabled="disabled" id="@string.Format("multiply{0}", item.ID)" value="1" onblur="javascript:ShowData()" size="4"/>
                <button disabled="disabled" name="export" id='@string.Format("export{0}", item.ID)' value="@item.ID">Export</button>
                <button name="ShowMap" id="ShowMap" onclick="ShowMap('@item.ID')">harta</button>
            </p>
        }



        <p><a class="btn btn-default" href="http://go.microsoft.com/fwlink/?LinkId=301865">Learn more &raquo;</a>
        </p>
    </div>
    <div class="col-md-10">
        <h2>Show</h2>
        <div id="container" style="min-width: 310px; height: 400px; margin: 0 auto"></div>
        <p>
            @foreach (var s in jud)
            {
                <text>
                    <input type="checkbox" id="@s" name="judet" checked="checked" value="@s"/>
                    <label for="@s">@s</label>
                </text>
            }
        </p>
        
    </div>



</div>
@section scripts
{
    <script>
        function ShowMap(id) {
            window.open('@Url.Content("~/Home/ShowMap")' + '/' + id);
        }
        var arrData = [];
        $(document).ready(function() {
            $('input[type="checkbox"][name="series"]').change(function() {
                var chk = $(this);
                DownloadResource(chk);
                ShowData();
            });

            $('input[type="checkbox"][name="judet"]').change(function() {
                ShowData();
            });
            $('button[name="export"]').click(function() {
                var id= $(this).val();
                ExportData(id);
            });
        });


        function DownloadResource(chk) {
            
            var check = chk.prop('checked');
            var id = chk.prop('id');
            var result = $.grep(arrData, function(e) { return e.id == id; });

            var exists = (result.length > 0);
            if (exists) {
                result[0].show = check;
            }
            if (check && (!exists)) {
                var url = '@Url.Content("~/api/RopDataSaved/")' + id;
                //window.open(url);
                $.ajax({
                    url: url,
                    async: false
                }).done(function(data) {
                    //chk.addClass("done");
                    var data = { id: id, data: data, show: true };
                    $("#multiply" + id).prop("disabled", false);
                    $("#export" + id).prop("disabled", false);
                    arrData.push(data);
                });
            }
        }


    </script>
    <script src="https://code.highcharts.com/highcharts.js"></script>
    <script src="https://code.highcharts.com/modules/exporting.js"></script>
    <script>
        var Judete = @Html.Raw(str);
        
        function ExportData(id) {
            //debugger;
            
            
            var result = $.grep(arrData.splice(0), function(e) { return e.id == id; });
            var exportDataArr = result[0].data.Document.Data.splice(0).map(
                function(el) {
                    
                    return { judet: el.Judet.Nume, valoare: el.Valoare };
                }
            );
            if (exportDataArr.length == 0)
                return;
            var dataExport = JSON.stringify(exportDataArr);
            var id=5;//5=xlsx, 4=docx, 3 = pdf
            var urlData='http://exporter.azurewebsites.net/api/export/ExportFromJSON/' + id;
            Export(urlData, id, dataExport);
            return false;


        }
        function findExtension(id) {
            switch (id) {
            case 5:
                return "xlsx";
            case 4:
                return "docx";
            case 3:
                return "pdf";
            default:
                return "notKnown" + id;
            }
        }
        function Export(urlExport,id, data) {
            var ext = findExtension(id);
            //step 1 - post data
            $.ajax({
                    type: "POST",
                    url: urlExport,
                    data: JSON.stringify({ 'data': data }),
                    datatype: "JSON",
                    contentType: "application/json; charset=utf-8"
                })
                .done(function(result) {
                    //step 2 - obtain file
                    var urlDownload = 'http://exporter.azurewebsites.net/api/export/GetFile/' + result;
                    urlDownload += "?fileName=andrei&extension="+ext;
                    window.location=urlDownload;
                })
                .fail(function(f) {
                    alert("error:" + f.responseText);
                });
        }
        
        function ShowData() {
            var initialJudete=Judete.slice(0);
            
            //TODO: use MVVM
            var arrayCheckedJudete = $('input[type="checkbox"][name="judet"]')
                .filter(":not(:checked)")
                .map(function(){

                    return $(this).val();

                });
            
            var categoriesJudete = [];

            jQuery.grep(initialJudete, function(el) {
                if (jQuery.inArray(el, arrayCheckedJudete) == -1)
                    categoriesJudete.push(el);
            });

            //TODO:use MVVM
            //remove judete not checked

            var result = $.grep(arrData, function(e) { return e.show; });
            var existsData = (result.length > 0) && (categoriesJudete.length>0);

            $('#container').toggle(existsData);
            if (!existsData)
                return;

            var title = "Serii de date";
            var seriesData = [];
            for (var i = 0; i < result.length; i++) {

                var doc = result[i].data.Document;
                var dataDocument = {};
                dataDocument.name = doc.Name;
                //TODO: use MVVM javascript
                var multiply = $("#multiply" + doc.ID).val();
                multiply = parseFloat(multiply);
                
                if (!$.isNumeric(multiply)) {
                    multiply = 1;
                }
                dataDocument.data = [];

                for (var jud = 0; jud < categoriesJudete.length; jud++) {
                    var judet = categoriesJudete[jud];
                    var val = $.grep(doc.Data, function(e) { return e.Judet.Nume == judet; });
                    var valoare = val[0].Valoare * multiply ;
                    dataDocument.data.push(valoare);

                }
                seriesData.push(dataDocument);

            }
            
            
            
            $('#container').highcharts({
                chart: {
                    type: 'spline'
                },
                title: {
                    text: title
                },
                subtitle: {
                    text: 'Source: data.gov.ro'
                },
                xAxis: {
                    categories: categoriesJudete
                },
                yAxis: {
                    title: {
                        text: 'Valori'
                    }
                },
                tooltip: {
                    crosshairs: true,
                    shared: true
                },
                plotOptions: {
                    line: {
                        dataLabels: {
                            enabled: true
                        },
                        enableMouseTracking: false
                    }
                },
                series: seriesData
            });
        }
    </script>
}
